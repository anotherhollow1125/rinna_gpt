name: RinnaBuild
on:
  push:
    tags:
      - "rinna*"
  workflow_dispatch:

# 参考
# https://docs.github.com/ja/actions/automating-builds-and-tests/building-and-testing-python
# https://minerva.mamansoft.net/Notes/GitHub+Action%E3%81%A7%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E7%9B%B4%E5%88%97%E5%AE%9F%E8%A1%8C

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./rinna_app
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio
          pip install 'transformers[sentencepiece]'
          pip install pyinstaller
      - name: Run Pyinstaller
        run: |
          pyinstaller --onefile --hidden-import=pytorch `
          --collect-data torch `
          --copy-metadata torch `
          --copy-metadata tqdm `
          --copy-metadata regex `
          --copy-metadata requests `
          --copy-metadata packaging `
          --copy-metadata filelock `
          --copy-metadata numpy `
          --copy-metadata tokenizers `
          --copy-metadata sentencepiece `
          --hidden-import="sklearn.utils._cython_blas" `
          --hidden-import="sklearn.neighbors.typedefs" `
          --hidden-import="sklearn.neighbors.quad_tree" `
          --hidden-import="sklearn.tree" `
          --hidden-import="sklearn.tree._utils" `
          --hidden-import="sentencepiece" `
          main.py
          mv ./dist/main.exe ../rinna.exe
      - name: Save rinna.exe
        uses: actions/upload-artifact@v2
        if: '!failure()'
        with:
          name: rinna_exe
          path: ./rinna.exe